generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  sessions  Session[] @relation("hostSessions")
  votes     Vote[]
}

model Team {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
}

model Session {
  id         String   @id @default(uuid())
  name       String
  hostUserId String
  hostUser   User     @relation("hostSessions", fields: [hostUserId], references: [id])
  status     String   @default("open")
  startedAt  DateTime @default(now())
  endedAt    DateTime?
  stories    Story[]
}

model Story {
  id          String   @id @default(uuid())
  sessionId   String
  title       String
  description String?
  finalPoint  String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  votes       Vote[]
  session     Session  @relation(fields: [sessionId], references: [id])
}

model Vote {
  id        String   @id @default(uuid())
  storyId   String
  userId    String?
  anonId    String?
  value     String
  createdAt DateTime @default(now())
  story     Story    @relation(fields: [storyId], references: [id])
  user      User?    @relation(fields: [userId], references: [id])
}

model AuthToken {
  id        String   @id @default(uuid())
  email     String
  token     String   @unique
  used      Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())
}
